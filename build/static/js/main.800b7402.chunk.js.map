{"version":3,"sources":["components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","components/ExpenseListFilters.js","actions/filters.js","components/ExpenseDashboardPage.js","components/ExpenseForm.js","components/AddExpensePage.js","actions/expenses.js","components/EditExpensePage.js","components/HelpPage.js","components/NotFoundPage.js","components/Header.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","index.js","store/configureStore.js"],"names":["ExpenseListItem","id","description","amount","createdAt","to","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","connect","state","selectExpenses","filters","props","length","map","ExpenseListFilters","calendarFocused","onDatesChange","setStartDate","setEndDate","onFocusChange","setState","onTextChange","e","setTextFilter","target","value","onSortChange","sortByDate","sortByAmount","type","this","onChange","focusedInput","showClearDates","numberOfMonths","isOutsideRange","startDateId","endDateId","React","Component","dispatch","ExpenseDashboardPage","ExpenseForm","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmitForm","preventDefault","error","onSubmitJD","parseFloat","valueOf","toString","onSubmit","placeholder","autoFocus","date","AddExpensePage","addExpense","history","push","undefined","uuid","EditExpensePage","editExpense","onRemove","removeExpense","onClick","find","params","updates","data","HelpPage","NotFoundPage","Header","activeClassName","exact","AppRouter","path","component","expensesReducerDefaultState","action","filtersReducerDefaultState","startOf","endOf","filtersReducer","store","createStore","combineReducers","expensesReducer","window","__REDUX_DEVTOOLS_EXTENSION__","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.800b7402.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ExpenseListItem = ({ id, description, amount, createdAt }) => {\n    return (\n        <div>\n            <Link to={`/edit/${id}`}>\n                <h3>{description}</h3>\n            </Link>\n            <p>{amount} - {createdAt}</p>\n\n        </div>\n    )\n\n}\n\n\n\nexport default ExpenseListItem","import moment from 'moment'\n\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\n    return expenses.filter((expense) => {\n        const createdAtMoment = moment(expense.createdAt)\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase())\n\n\n\n        return startDateMatch && endDateMatch && textMatch\n    }).sort((a, b) => {\n        if (sortBy === 'date') {\n            return a.createdAt < b.createdAt ? 1 : -1\n        } else if (sortBy === 'amount') {\n            return a.amount < b.amount ? 1 : -1\n        }\n    })\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ExpenseListItem from './ExpenseListItem'\nimport selectExpenses from '../selectors/expenses'\n\nexport const ExpenseList = (props) => (\n    <div>\n        <h1>Expense List</h1>\n        <div>\n            {\n                props.expenses.length === 0 ? (\n                    <h2>No expneses</h2>\n                ) : (\n                    props.expenses.map((expense) => {\n                        return (<ExpenseListItem key={expense.id} {...expense} />)\n                    })\n                )\n            }\n        </div>\n    </div>\n)\n\nconst mapStateToProps = (state) => {\n    return {\n        expenses: selectExpenses(state.expenses, state.filters)\n    };\n}\n\nexport default connect(mapStateToProps)(ExpenseList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { DateRangePicker } from 'react-dates'\nimport { sortByDate, sortByAmount, setTextFilter, setStartDate, setEndDate } from '../actions/filters'\n\nexport class ExpenseListFilters extends React.Component {\n    state = {\n        calendarFocused: null\n    }\n    onDatesChange = ({ startDate, endDate }) => {\n        this.props.setStartDate(startDate)\n        this.props.setEndDate(endDate)\n    }\n    onFocusChange = (calendarFocused) => {\n        this.setState(() => ({ calendarFocused }))\n    }\n    onTextChange = (e) => {\n        this.props.setTextFilter(e.target.value)\n    }\n    onSortChange = (e) => {\n        e.target.value === \"date\" ? this.props.sortByDate() : this.props.sortByAmount()\n    }\n    render() {\n        return (\n            <div>\n                <input type=\"text\" value={this.props.filters.text} onChange={this.onTextChange} />\n                <select value={this.props.filters.sortBy} onChange={this.onSortChange}>\n                    <option value=\"date\">Date</option>\n                    <option value=\"amount\">Amount</option>\n                </select>\n                <DateRangePicker\n                    startDate={this.props.filters.startDate}\n                    endDate={this.props.filters.endDate}\n                    onDatesChange={this.onDatesChange}\n                    focusedInput={this.state.calendarFocused}\n                    onFocusChange={this.onFocusChange}\n                    showClearDates={true}\n                    numberOfMonths={1}\n                    isOutsideRange={() => false}\n                    startDateId={\"1\"}\n                    endDateId={\"2\"}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        filters: state.filters\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sortByDate: () => dispatch(sortByDate()),\n        sortByAmount: () => dispatch(sortByAmount()),\n        setTextFilter: (text) => dispatch(setTextFilter(text)),\n        setStartDate: (startDate) => dispatch(setStartDate(startDate)),\n        setEndDate: (endDate) => dispatch(setEndDate(endDate))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters)","//Set text filter\nexport const setTextFilter = (text = '') => ({\n    type: 'SET_TEXT_FILTER',\n    text\n})\n\nexport const sortByAmount = () => ({\n    type: \"SORT_BY_AMOUNT\"\n})\n\nexport const sortByDate = () => ({\n    type: \"SORT_BY_DATE\"\n})\n\nexport const setStartDate = (startDate) => ({\n    type: \"SET_START_DATE\",\n    startDate\n})\n\nexport const setEndDate = (endDate) => ({\n    type: \"SET_END_DATE\",\n    endDate\n})","import ExpenseList from './ExpenseList'\nimport ExpenseListFilters from './ExpenseListFilters'\n\nconst ExpenseDashboardPage = () => (\n    <div>\n        <ExpenseListFilters />\n        <ExpenseList />\n    </div>\n);\n\nexport default ExpenseDashboardPage;","import React from 'react';\nimport moment from 'moment'\nimport { SingleDatePicker } from 'react-dates'\n\n// const date = new Date();\nconst now = moment();\n\nexport default class ExpenseForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            description: props.expense ? props.expense.description : '',\n            note: props.expense ? props.expense.note : '',\n            amount: props.expense ? (props.expense.amount / 100).toString() : '',\n            createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\n            calendarFocused: false,\n            error: ''\n        };\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value;\n        this.setState(() => ({ description }));\n    };\n    onNoteChange = (e) => {\n        const note = e.target.value;\n        this.setState(() => ({ note }));\n    };\n    onAmountChange = (e) => {\n        const amount = e.target.value;\n\n        if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n            this.setState(() => ({ amount }));\n        }\n    };\n    onDateChange = (createdAt) => {\n        if (createdAt) {\n            this.setState(() => ({ createdAt }));\n        }\n\n    };\n    onFocusChange = ({ focused }) => {\n        this.setState(() => ({ calendarFocused: focused }));\n    };\n    onSubmitForm = (e) => {\n        e.preventDefault()\n\n        if (!this.state.description || !this.state.amount) {\n            this.setState(() => ({ error: \"Please provide required information!\" }))\n        } else {\n            this.setState(() => ({ error: \"\" }))\n\n            this.props.onSubmitJD({\n                description: this.state.description,\n                amount: parseFloat(this.state.amount, 10) * 100,\n                note: this.state.note,\n                createdAt: this.state.createdAt.valueOf()\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    {this.state.error}\n                </div>\n                <form onSubmit={this.onSubmitForm}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        autoFocus\n                        value={this.state.description}\n                        onChange={this.onDescriptionChange}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Amount\"\n                        value={this.state.amount}\n                        onChange={this.onAmountChange}\n                    />\n                    <SingleDatePicker\n                        date={this.state.createdAt}\n                        onDateChange={this.onDateChange}\n                        focused={this.state.calendarFocused}\n                        onFocusChange={this.onFocusChange}\n                        numberOfMonths={1}\n                        isOutsideRange={() => false}\n                    />\n                    <textarea\n                        placeholder=\"Add a note for your expense (optional)\"\n                        value={this.state.note}\n                        onChange={this.onNoteChange}\n                    >\n                    </textarea>\n                    <button>Add Expense</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ExpenseForm from './ExpenseForm'\nimport { connect } from 'react-redux'\nimport { addExpense } from '../actions/expenses'\n\nexport class AddExpensePage extends React.Component {\n    onSubmit = (expense) => {\n        this.props.addExpense(expense)\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <div>\n                <h3>Add Expense</h3>\n                <ExpenseForm\n                    onSubmitJD={this.onSubmit}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addExpense: (expense) => dispatch(addExpense(expense))\n    }\n}\n\nexport default connect(undefined, mapDispatchToProps)(AddExpensePage);","import { v4 as uuid } from 'uuid'\n\n// Add expense\nexport const addExpense = (\n    {\n        description = '',\n        note = '',\n        amount = 0,\n        createdAt = 0\n    } = {}) => ({\n        type: 'ADD_EXPENSE',\n        expense: {\n            id: uuid(),\n            description,\n            note,\n            amount,\n            createdAt\n        }\n    })\n\n// Remove expense\nexport const removeExpense = ({ id } = {}) => ({\n    type: 'REMOVE_EXPENSE',\n    id\n})\n\n//Edit expense\nexport const editExpense = (id, updates) => ({\n    type: 'EDIT_EXPENSE',\n    id,\n    updates\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport ExpenseForm from './ExpenseForm'\nimport { editExpense, removeExpense } from '../actions/expenses'\n\nexport class EditExpensePage extends React.Component {\n    onSubmit = (expense) => {\n        this.props.editExpense(this.props.expense.id, expense)\n        this.props.history.push('/')\n    }\n    onRemove = () => {\n        this.props.removeExpense({ id: this.props.expense.id })\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <div>\n                <ExpenseForm\n                    expense={this.props.expense}\n                    onSubmitJD={this.onSubmit} />\n                <button onClick={this.onRemove}>Remove</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        expense: state.expenses.find((expense) => expense.id === props.match.params.id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        editExpense: (id, expense) => dispatch(editExpense(id, expense)),\n        removeExpense: (data) => dispatch(removeExpense(data))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);","const HelpPage = () => (\n    <div>\n        Help Page\n    </div>\n);\n\nexport default HelpPage;","import { Link } from 'react-router-dom'\n\nconst NotFoundPage = () => (\n    <div>\n        404! - <Link to=\"/\">Go home</Link>\n    </div>\n);\n\nexport default NotFoundPage;","import { NavLink } from 'react-router-dom'\n\nconst Header = () => (\n    <header>\n        <h1>Expensify</h1>\n        <NavLink activeClassName=\"is-active\" to=\"/\" exact={true}>Home page</NavLink>\n        <NavLink activeClassName=\"is-active\" to=\"/create\">Create expense</NavLink>\n        <NavLink activeClassName=\"is-active\" to=\"/help\">Help page</NavLink>\n    </header>\n);\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage'\nimport AddExpensePage from '../components/AddExpensePage'\nimport EditExpensePage from '../components/EditExpensePage'\nimport HelpPage from '../components/HelpPage'\nimport NotFoundPage from '../components/NotFoundPage'\nimport Header from '../components/Header'\n\nconst AppRouter = () => (\n    <BrowserRouter>\n        <div>\n            <Header />\n            <Switch>\n                <Route path={`/`} component={ExpenseDashboardPage} exact={true} />\n                <Route path={'/create'} component={AddExpensePage} />\n                <Route path={'/edit/:id'} component={EditExpensePage} />\n                <Route path={'/help'} component={HelpPage} />\n                <Route component={NotFoundPage} />\n            </Switch>\n        </div>\n    </BrowserRouter>\n);\n\nexport default AppRouter;","// Expenses reducer\nconst expensesReducerDefaultState = [];\n\nexport default (state = expensesReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return [\n                ...state,\n                action.expense\n            ];\n        case 'REMOVE_EXPENSE':\n            return state.filter(({ id }) => id !== action.id);\n        case 'EDIT_EXPENSE':\n            return state.map((expense) => {\n                if (expense.id === action.id) {\n                    return {\n                        ...expense,\n                        ...action.updates\n                    };\n                } else {\n                    return expense;\n                };\n            });\n        default:\n            return state;\n    }\n};\n","import moment from 'moment';\n\n// Filters reducer\nconst filtersReducerDefaultState = {\n    text: '',\n    sortBy: 'date',\n    startDate: moment().startOf('month'),\n    endDate: moment().endOf('month')\n};\n\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'SET_TEXT_FILTER':\n            return {\n                ...state,\n                text: action.text\n            }\n        case \"SORT_BY_AMOUNT\":\n            return {\n                ...state,\n                sortBy: 'amount'\n            }\n        case \"SORT_BY_DATE\":\n            return {\n                ...state,\n                sortBy: 'date'\n            }\n        case \"SET_START_DATE\":\n            return {\n                ...state,\n                startDate: action.startDate\n            }\n        case \"SET_END_DATE\":\n            return {\n                ...state,\n                endDate: action.endDate\n            }\n        default:\n            return state\n    }\n}\n\nexport default filtersReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport AppRouter from './routers/AppRouter'\nimport configureStore from './store/configureStore'\nimport './index.scss';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css'\n\nconst store = configureStore();\n\nconst jsx = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('root'))\n","import { createStore, combineReducers } from 'redux'\n\nimport expensesReducer from '../reducers/expenses'\nimport filtersReducer from '../reducers/filters'\n\nexport default () => {\n    //Combined reducers\n    const store = createStore(combineReducers({\n        expenses: expensesReducer,\n        filters: filtersReducer\n    }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n    return store;\n}\n\n"],"sourceRoot":""}