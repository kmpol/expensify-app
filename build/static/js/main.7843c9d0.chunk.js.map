{"version":3,"sources":["components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","components/ExpenseListFilters.js","actions/filters.js","components/ExpensesSummary.js","selectors/expenses-total.js","components/ExpenseDashboardPage.js","components/ExpenseForm.js","firebase/firebase.js","actions/expenses.js","components/AddExpensePage.js","components/EditExpensePage.js","components/HelpPage.js","components/NotFoundPage.js","components/Header.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","store/configureStore.js","index.js"],"names":["ExpenseListItem","id","description","amount","createdAt","to","numeral","format","moment","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","connect","state","selectExpenses","filters","props","length","map","ExpenseListFilters","calendarFocused","onDatesChange","setStartDate","setEndDate","onFocusChange","setState","onTextChange","e","setTextFilter","target","value","onSortChange","sortByDate","sortByAmount","type","this","onChange","focusedInput","showClearDates","numberOfMonths","isOutsideRange","startDateId","endDateId","React","Component","dispatch","ExpensesSummary","grammarExpenseDisplay","expenseCount","expensesInTotal","visibleExpenses","selectedExpenses","reduce","sum","current","ExpenseDashboardPage","ExpenseForm","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmitForm","preventDefault","error","onSubmitJD","parseFloat","valueOf","toString","onSubmit","placeholder","autoFocus","date","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","addExpense","removeExpense","AddExpensePage","startAddExpense","history","push","undefined","expenseData","ref","then","key","EditExpensePage","editExpense","onRemove","startRemoveExpense","onClick","find","params","updates","data","remove","HelpPage","NotFoundPage","Header","activeClassName","exact","AppRouter","path","component","expensesReducerDefaultState","action","filtersReducerDefaultState","startOf","endOf","filtersReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","expensesReducer","applyMiddleware","thunk","jsx","ReactDOM","render","document","getElementById","once","snapshot","forEach","childSnapshot","val","setExpenses"],"mappings":"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","file":"static/js/main.7843c9d0.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport numeral from 'numeral'\n\nconst ExpenseListItem = ({ id, description, amount, createdAt }) => {\n    return (\n        <div>\n            <Link to={`/edit/${id}`}>\n                <h3>{description}</h3>\n            </Link>\n            <p>\n                {numeral(amount / 100).format('$0, 0.00')}\n                -\n                {moment(createdAt).format('MMMM Do, YYYY')}\n            </p>\n        </div>\n    )\n\n}\n\nexport default ExpenseListItem","import moment from 'moment'\n\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\n    return expenses.filter((expense) => {\n        const createdAtMoment = moment(expense.createdAt)\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase())\n\n\n\n        return startDateMatch && endDateMatch && textMatch\n    }).sort((a, b) => {\n        if (sortBy === 'date') {\n            return a.createdAt < b.createdAt ? 1 : -1\n        } else if (sortBy === 'amount') {\n            return a.amount < b.amount ? 1 : -1\n        }\n    })\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ExpenseListItem from './ExpenseListItem'\nimport selectExpenses from '../selectors/expenses'\n\nexport const ExpenseList = (props) => (\n    <div>\n        <h1>Expense List</h1>\n        <div>\n            {\n                props.expenses.length === 0 ? (\n                    <h2>No expneses</h2>\n                ) : (\n                    props.expenses.map((expense) => {\n                        return (<ExpenseListItem key={expense.id} {...expense} />)\n                    })\n                )\n            }\n        </div>\n    </div>\n)\n\nconst mapStateToProps = (state) => {\n    return {\n        expenses: selectExpenses(state.expenses, state.filters)\n    };\n}\n\nexport default connect(mapStateToProps)(ExpenseList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { DateRangePicker } from 'react-dates'\nimport { sortByDate, sortByAmount, setTextFilter, setStartDate, setEndDate } from '../actions/filters'\n\nexport class ExpenseListFilters extends React.Component {\n    state = {\n        calendarFocused: null\n    }\n    onDatesChange = ({ startDate, endDate }) => {\n        this.props.setStartDate(startDate)\n        this.props.setEndDate(endDate)\n    }\n    onFocusChange = (calendarFocused) => {\n        this.setState(() => ({ calendarFocused }))\n    }\n    onTextChange = (e) => {\n        this.props.setTextFilter(e.target.value)\n    }\n    onSortChange = (e) => {\n        e.target.value === \"date\" ? this.props.sortByDate() : this.props.sortByAmount()\n    }\n    render() {\n        return (\n            <div>\n                <input type=\"text\" value={this.props.filters.text} onChange={this.onTextChange} />\n                <select value={this.props.filters.sortBy} onChange={this.onSortChange}>\n                    <option value=\"date\">Date</option>\n                    <option value=\"amount\">Amount</option>\n                </select>\n                <DateRangePicker\n                    startDate={this.props.filters.startDate}\n                    endDate={this.props.filters.endDate}\n                    onDatesChange={this.onDatesChange}\n                    focusedInput={this.state.calendarFocused}\n                    onFocusChange={this.onFocusChange}\n                    showClearDates={true}\n                    numberOfMonths={1}\n                    isOutsideRange={() => false}\n                    startDateId={\"1\"}\n                    endDateId={\"2\"}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        filters: state.filters\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sortByDate: () => dispatch(sortByDate()),\n        sortByAmount: () => dispatch(sortByAmount()),\n        setTextFilter: (text) => dispatch(setTextFilter(text)),\n        setStartDate: (startDate) => dispatch(setStartDate(startDate)),\n        setEndDate: (endDate) => dispatch(setEndDate(endDate))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters)","//Set text filter\nexport const setTextFilter = (text = '') => ({\n    type: 'SET_TEXT_FILTER',\n    text\n})\n\nexport const sortByAmount = () => ({\n    type: \"SORT_BY_AMOUNT\"\n})\n\nexport const sortByDate = () => ({\n    type: \"SORT_BY_DATE\"\n})\n\nexport const setStartDate = (startDate) => ({\n    type: \"SET_START_DATE\",\n    startDate\n})\n\nexport const setEndDate = (endDate) => ({\n    type: \"SET_END_DATE\",\n    endDate\n})","import React from 'react'\nimport { connect } from 'react-redux';\nimport selectedExpenses from '../selectors/expenses'\nimport selectedExpensesTotal from '../selectors/expenses-total'\nimport numeral from 'numeral'\n\nexport class ExpensesSummary extends React.Component {\n\n    render() {\n        const grammarExpenseDisplay = this.props.expenseCount === 1 ? \"expense\" : \"expenses\"\n        return (\n            <div>\n                <p>Viewing {this.props.expenseCount} {grammarExpenseDisplay} with total: ${numeral(this.props.expensesInTotal / 100).format('0.00')}</p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const visibleExpenses = selectedExpenses(state.expenses, state.filters)\n\n    return {\n        expenseCount: visibleExpenses.length,\n        expensesInTotal: selectedExpensesTotal(visibleExpenses)\n    }\n}\nexport default connect(mapStateToProps)(ExpensesSummary)","// expenses = array of objects\n// expenses -> map -> array of numbers\n// array of numbers -> reduce -> sum of these numbers\n// return 0 if no expenses provided\nexport default (expenses) => {\n    if (expenses.length) {\n        return expenses.map((expense) => expense.amount)\n            .reduce((sum, current) => sum + current, 0)\n\n    } else return 0\n}","import ExpenseList from './ExpenseList'\nimport ExpenseListFilters from './ExpenseListFilters'\nimport ExpensesSummary from './ExpensesSummary';\n\nconst ExpenseDashboardPage = () => (\n    <div>\n        <ExpensesSummary />\n        <ExpenseListFilters />\n        <ExpenseList />\n    </div>\n);\n\nexport default ExpenseDashboardPage;","import React from 'react';\nimport moment from 'moment'\nimport { SingleDatePicker } from 'react-dates'\n\nexport default class ExpenseForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            description: props.expense ? props.expense.description : '',\n            note: props.expense ? props.expense.note : '',\n            amount: props.expense ? (props.expense.amount / 100).toString() : '',\n            createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\n            calendarFocused: false,\n            error: ''\n        };\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value;\n        this.setState(() => ({ description }));\n    };\n    onNoteChange = (e) => {\n        const note = e.target.value;\n        this.setState(() => ({ note }));\n    };\n    onAmountChange = (e) => {\n        const amount = e.target.value;\n\n        if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n            this.setState(() => ({ amount }));\n        }\n    };\n    onDateChange = (createdAt) => {\n        if (createdAt) {\n            this.setState(() => ({ createdAt }));\n        }\n\n    };\n    onFocusChange = ({ focused }) => {\n        this.setState(() => ({ calendarFocused: focused }));\n    };\n    onSubmitForm = (e) => {\n        e.preventDefault()\n\n        if (!this.state.description || !this.state.amount) {\n            this.setState(() => ({ error: \"Please provide required information!\" }))\n        } else {\n            this.setState(() => ({ error: \"\" }))\n\n            this.props.onSubmitJD({\n                description: this.state.description,\n                amount: parseFloat(this.state.amount, 10) * 100,\n                note: this.state.note,\n                createdAt: this.state.createdAt.valueOf()\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    {this.state.error}\n                </div>\n                <form onSubmit={this.onSubmitForm}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        autoFocus\n                        value={this.state.description}\n                        onChange={this.onDescriptionChange}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Amount\"\n                        value={this.state.amount}\n                        onChange={this.onAmountChange}\n                    />\n                    <SingleDatePicker\n                        date={this.state.createdAt}\n                        onDateChange={this.onDateChange}\n                        focused={this.state.calendarFocused}\n                        onFocusChange={this.onFocusChange}\n                        numberOfMonths={1}\n                        isOutsideRange={() => false}\n                    />\n                    <textarea\n                        placeholder=\"Add a note for your expense (optional)\"\n                        value={this.state.note}\n                        onChange={this.onNoteChange}\n                    >\n                    </textarea>\n                    <button>Add Expense</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\n// prod database\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCwQrhn3RxjlpHdMY0AVvoOOgJAwmAnSZI\",\n    authDomain: \"expensify-jd.firebaseapp.com\",\n    databaseURL: \"https://expensify-jd-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"expensify-jd\",\n    storageBucket: \"expensify-jd.appspot.com\",\n    messagingSenderId: \"728170087236\",\n    appId: \"1:728170087236:web:00e919cb15dcc8c2144d11\"\n};\n\n//testing database\nconst firebaseConfigTest = {\n    apiKey: \"AIzaSyAoWczXSBRxh_ljjJ5FTg5W2rqXPMErsB8\",\n    authDomain: \"expensify-jd-test.firebaseapp.com\",\n    databaseURL: \"https://expensify-jd-test-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"expensify-jd-test\",\n    storageBucket: \"expensify-jd-test.appspot.com\",\n    messagingSenderId: \"238871812815\",\n    appId: \"1:238871812815:web:3d5467684475d221feb5ba\"\n};\n\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfigTest);\n\nconst database = firebase.database()\n\nexport {\n    firebase,\n    database as default\n}\n\n// firebase.database().ref('expenses').on('value', (snapshot) => {\n//     const expenses = []\n\n//     snapshot.forEach((childSnapshot) => {\n//         expenses.push({\n//             id: childSnapshot.key,\n//             ...childSnapshot.val()\n//         })\n//     })\n\n//     console.log(expenses)\n// })\n\n// firebase.database().ref('expenses').on('child_removed', (removedSnapshot) => {\n//     console.log('removed snapshot', removedSnapshot.val())\n// })\n\n// firebase.database().ref('expenses').on('child_changed', (childSnapshot) => {\n//     console.log('child changed', childSnapshot.val())\n// })\n\n// firebase.database().ref('expenses').once('value')\n//     .then((snapshot) => {\n//         const expenses = []\n//         snapshot.forEach((childSnapshot) => {\n\n//             expenses.push({\n//                 id: childSnapshot.key,\n//                 ...childSnapshot.val()\n//             })\n//         })\n//         console.log(expenses)\n//     })\n\n// const expenses = [{\n//     description: 'First note description',\n//     note: 'f n note',\n//     amount: 123,\n//     createdAt: 9312671879329\n// }, {\n//     description: 'Second note description',\n//     note: 's n note',\n//     amount: 321,\n//     createdAt: 123231\n// }, {\n//     description: 'Third note description',\n//     note: 't n note',\n//     amount: 1703,\n//     createdAt: 2130700087\n// }]\n\n// expenses.forEach((expense) => {\n//     firebase.database().ref('expenses').push(expense)\n// })\n\n\n\n// const notes = [{\n//     id: '123',\n//     title: 'First note',\n//     body: 'This is note body'\n// }, {\n//     id: 'f1ea2af3afe',\n//     title: 'Another note',\n//     body: 'This is note body'\n// }]\n\n// firebase.database().ref('notes').set(notes)\n\n// firebase.database().ref('location')\n//     .once('value')\n//     .then((snapshot) => {\n//         const val = snapshot.val()\n//         console.log(val)\n//     })\n//     .catch((e) => {\n//         console.log(\"error with fetching data\", e)\n//     })\n\n// firebase.database().ref().set({\n//     name: \"Karol\",\n//     age: 24,\n//     stressLevel: 6,\n//     job: {\n//         title: 'Software developer',\n//         company: 'Google'\n//     },\n//     location: {\n//         city: 'Bydgoszcz',\n//         country: 'Poland'\n//     }\n// }).then(() => {\n//     console.log('saved!')\n// }).catch((err) => {\n//     console.log('An error has occured: ', err)\n// })\n\n// const onValueChange = firebase.database().ref().on('value', (snapshot) => {\n//     const snapshotValue = snapshot.val()\n//     console.log(`${snapshotValue.name} is worikng at ${snapshotValue.job.company} as a ${snapshotValue.job.title}`)\n// })\n\n// firebase.database().ref().update({\n//     name: \"Mike\",\n//     'job/company': 'Amazon'\n// })\n// firebase.database().ref().update({\n//     stressLevel: 9,\n//     'job/company': \"Amazon\",\n//     'location/city': 'Poznań'\n// })\n\n// firebase.database().ref('isSingle').remove().then(() => {\n//     console.log('Data has been removed')\n// }).catch((e) => {\n//     console.log('an error has taken place', e)\n// })","import { v4 as uuid } from 'uuid'\nimport database from '../firebase/firebase';\n\n// ADD_EXPENSE\nexport const addExpense = (expense) => ({\n    type: 'ADD_EXPENSE',\n    expense\n});\n\nexport const startAddExpense = (expenseData = {}) => {\n    return (dispatch) => {\n        const {\n            description = '',\n            note = '',\n            amount = 0,\n            createdAt = 0\n        } = expenseData;\n        const expense = { description, note, amount, createdAt };\n\n        return database.ref('expenses').push(expense).then((ref) => {\n            dispatch(addExpense({\n                id: ref.key,\n                ...expense\n            }));\n        });\n    };\n};\n\n// REMOVE_EXPENSE\nexport const removeExpense = ({ id } = {}) => ({\n    type: 'REMOVE_EXPENSE',\n    id\n});\n\nexport const startRemoveExpense = ({ id } = {}) => {\n    return (dispatch) => {\n        return database.ref(`expenses/${id}`).remove().then(() => {\n            dispatch(removeExpense({ id }));\n        });\n    };\n};\n\n// EDIT_EXPENSE\nexport const editExpense = (id, updates) => ({\n    type: 'EDIT_EXPENSE',\n    id,\n    updates\n});\n\n// SET_EXPENSES\nexport const setExpenses = (expenses) => ({\n    type: 'SET_EXPENSES',\n    expenses\n});\n\nexport const startSetExpenses = () => {\n    return (dispatch) => {\n        return database.ref('expenses').once('value').then((snapshot) => {\n            const expenses = [];\n\n            snapshot.forEach((childSnapshot) => {\n                expenses.push({\n                    id: childSnapshot.key,\n                    ...childSnapshot.val()\n                });\n            });\n\n            dispatch(setExpenses(expenses));\n        });\n    };\n};\n","import React from 'react'\nimport ExpenseForm from './ExpenseForm'\nimport { connect } from 'react-redux'\nimport { startAddExpense } from '../actions/expenses'\n\nexport class AddExpensePage extends React.Component {\n    onSubmit = (expense) => {\n        this.props.startAddExpense(expense)\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <div>\n                <h3>Add Expense</h3>\n                <ExpenseForm\n                    onSubmitJD={this.onSubmit}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        startAddExpense: (expense) => dispatch(startAddExpense(expense))\n    }\n}\n\nexport default connect(undefined, mapDispatchToProps)(AddExpensePage);","import React from 'react'\nimport { connect } from 'react-redux'\nimport ExpenseForm from './ExpenseForm'\nimport { editExpense, startRemoveExpense } from '../actions/expenses'\n\nexport class EditExpensePage extends React.Component {\n    onSubmit = (expense) => {\n        this.props.editExpense(this.props.expense.id, expense)\n        this.props.history.push('/')\n    }\n    onRemove = () => {\n        this.props.startRemoveExpense({ id: this.props.expense.id })\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <div>\n                <ExpenseForm\n                    expense={this.props.expense}\n                    onSubmitJD={this.onSubmit} />\n                <button onClick={this.onRemove}>Remove</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        expense: state.expenses.find((expense) => expense.id === props.match.params.id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        editExpense: (id, expense) => dispatch(editExpense(id, expense)),\n        startRemoveExpense: (data) => dispatch(startRemoveExpense(data))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);","const HelpPage = () => (\n    <div>\n        Help Page\n    </div>\n);\n\nexport default HelpPage;","import { Link } from 'react-router-dom'\n\nconst NotFoundPage = () => (\n    <div>\n        404! - <Link to=\"/\">Go home</Link>\n    </div>\n);\n\nexport default NotFoundPage;","import { NavLink } from 'react-router-dom'\n\nconst Header = () => (\n    <header>\n        <h1>Expensify</h1>\n        <NavLink activeClassName=\"is-active\" to=\"/\" exact={true}>Home page</NavLink>\n        <NavLink activeClassName=\"is-active\" to=\"/create\">Create expense</NavLink>\n        <NavLink activeClassName=\"is-active\" to=\"/help\">Help page</NavLink>\n    </header>\n);\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage'\nimport AddExpensePage from '../components/AddExpensePage'\nimport EditExpensePage from '../components/EditExpensePage'\nimport HelpPage from '../components/HelpPage'\nimport NotFoundPage from '../components/NotFoundPage'\nimport Header from '../components/Header'\n\nconst AppRouter = () => (\n    <BrowserRouter>\n        <div>\n            <Header />\n            <Switch>\n                <Route path={`/`} component={ExpenseDashboardPage} exact={true} />\n                <Route path={'/create'} component={AddExpensePage} />\n                <Route path={'/edit/:id'} component={EditExpensePage} />\n                <Route path={'/help'} component={HelpPage} />\n                <Route component={NotFoundPage} />\n            </Switch>\n        </div>\n    </BrowserRouter>\n);\n\nexport default AppRouter;","// Expenses reducer\nconst expensesReducerDefaultState = [];\n\nexport default (state = expensesReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return [\n                ...state,\n                action.expense\n            ];\n        case 'REMOVE_EXPENSE':\n            return state.filter(({ id }) => id !== action.id);\n        case 'EDIT_EXPENSE':\n            return state.map((expense) => {\n                if (expense.id === action.id) {\n                    return {\n                        ...expense,\n                        ...action.updates\n                    };\n                } else {\n                    return expense;\n                };\n            });\n        case 'SET_EXPENSES':\n            return action.expenses\n        default:\n            return state;\n    }\n};\n","import moment from 'moment';\n\n// Filters reducer\nconst filtersReducerDefaultState = {\n    text: '',\n    sortBy: 'date',\n    startDate: moment().startOf('month'),\n    endDate: moment().endOf('month')\n};\n\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'SET_TEXT_FILTER':\n            return {\n                ...state,\n                text: action.text\n            }\n        case \"SORT_BY_AMOUNT\":\n            return {\n                ...state,\n                sortBy: 'amount'\n            }\n        case \"SORT_BY_DATE\":\n            return {\n                ...state,\n                sortBy: 'date'\n            }\n        case \"SET_START_DATE\":\n            return {\n                ...state,\n                startDate: action.startDate\n            }\n        case \"SET_END_DATE\":\n            return {\n                ...state,\n                endDate: action.endDate\n            }\n        default:\n            return state\n    }\n}\n\nexport default filtersReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport expensesReducer from '../reducers/expenses'\nimport filtersReducer from '../reducers/filters'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n    //Combined reducers\n    const store = createStore(combineReducers({\n        expenses: expensesReducer,\n        filters: filtersReducer\n    }),\n        composeEnhancers(applyMiddleware(thunk))\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n    return store;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport AppRouter from './routers/AppRouter'\nimport configureStore from './store/configureStore'\nimport { startAddExpense, startSetExpenses } from './actions/expenses';\nimport './index.scss';\nimport './firebase/firebase'\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css'\n\nconst store = configureStore();\n\nconst jsx = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n)\n\nReactDOM.render(<p>Loading</p>, document.getElementById('root'))\nstore.dispatch(startSetExpenses()).then(() => {\n    ReactDOM.render(jsx, document.getElementById('root'))\n})\n"],"sourceRoot":""}